[{"/home/hieu/Desktop/Hieu/Python/other_git/stats/LipStickRecommender/client/src/index.js":"1","/home/hieu/Desktop/Hieu/Python/other_git/stats/LipStickRecommender/client/src/reportWebVitals.js":"2","/home/hieu/Desktop/Hieu/Python/other_git/stats/LipStickRecommender/client/src/App.js":"3","/home/hieu/Desktop/Hieu/Python/other_git/stats/LipStickRecommender/client/src/home/home.js":"4"},{"size":500,"mtime":1610297266276,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":1610295237163,"results":"7","hashOfConfig":"6"},{"size":198,"mtime":1610297326206,"results":"8","hashOfConfig":"6"},{"size":8596,"mtime":1610900589726,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1jb8f5s",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"/home/hieu/Desktop/Hieu/Python/other_git/stats/LipStickRecommender/client/src/index.js",[],["21","22"],"/home/hieu/Desktop/Hieu/Python/other_git/stats/LipStickRecommender/client/src/reportWebVitals.js",[],"/home/hieu/Desktop/Hieu/Python/other_git/stats/LipStickRecommender/client/src/App.js",["23"],"import logo from './logo.svg';\nimport './App.css';\nimport HomePage from './home/home'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HomePage/>\n    </div>\n  );\n}\n\nexport default App;\n","/home/hieu/Desktop/Hieu/Python/other_git/stats/LipStickRecommender/client/src/home/home.js",["24","25","26"],"import React, { Component } from 'react'\nimport ReactDOM from 'react-dom'\nimport { InputGroup, FormControl, Button } from 'react-bootstrap'\nimport { Modal, Container, Row, Col } from 'react-bootstrap'\nimport ImageGallery from 'react-image-gallery'\nimport axios from 'axios'\n\n// CSS\nimport './css/main.css'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport \"react-image-gallery/styles/css/image-gallery.css\";\n\nclass HomePage extends Component {\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\t'selfie_file' : '/logo192.png', \n\t\t\t'display_info' : false, \n\t\t\t'display_gallery' : false,\n\t\t\t'R' : 0,\n\t\t\t'G' : 0,\n\t\t\t'B' : 0,\n\t\t\t'color_hex' : '#000000',\n\t\t\t'lip_type' : 'matte',\n\t\t\t'lipstick_images' : [],\n\t\t\t'brand_info' : [],\n\t\t\t'best_colors' : [],\n\t\t\t'current_brand_index' : 0\n\t\t}\n\t\n\t\t// binding event handlers\n\t\tthis.render = this.render.bind(this)\n\t\tthis.fileChange = this.fileChange.bind(this)\n\t\tthis.handleGalleryClose = this.handleGalleryClose.bind(this)\n\t\tthis.handleGalleryOpen = this.handleGalleryOpen.bind(this)\n\n\t\t// binding event handlers for the image gallery\n\t\tthis.thumbnailClicked = this.thumbnailClicked.bind(this)\n\t\tthis.slideChanged = this.slideChanged.bind(this)\n\t}\n\n\tcomponentDidMount(){\n\n\t}\n\n\tcomponentWillUnmount() {\n\n\t}\n\n\thandleGalleryClose() {\n\t\tthis.setState({display_gallery : false})\n\t}\n\n\thandleGalleryOpen() {\n\t\tthis.setState({display_gallery : true})\n\t}\n\n\tfileChange(e){\n\t\tthis.setState({display_load_screen : true})\n\t\tthis.setState({display_info : false})\n\t\tthis.setState({\n\t\t\t'selfie_file' : URL.createObjectURL(e.target.files[0])\n\t\t})\n\n\t\t// send this file to server for processing\n\t\tvar formData = new FormData()\n\t\tformData.append('img', e.target.files[0])\n\t\taxios({\n\t\t\tmethod : 'post',\n\t\t\tdata : formData,\n\t\t\turl : 'http://localhost:8080/upload',\n\t\t\theaders : {\n\t\t\t\t'Content-Type' : 'multipart/form-data'\n\t\t\t}\n\t\t}).then(response => { // on success\n\t\t\tif(response.data === 'no_face_detected'){\n\t\t\t\talert('Please upload a picture with your face clear and exposed')\n\t\t\t}else if(response.data === 'more_than_one_face_detected'){\n\t\t\t\talert('Please upload a picture with one face only')\n\t\t\t}else{\n\t\t\t\tthis.setState({display_info : true})\n\t\t\t\tthis.setState({display_load_screen : false})\n\n\t\t\t\tvar data = response.data\n\t\t\t\tthis.setState({R : data['lip_color']['R']})\n\t\t\t\tthis.setState({G : data['lip_color']['G']})\n\t\t\t\tthis.setState({B : data['lip_color']['B']})\n\t\t\t\tthis.setState({'color_hex' : data['lip_color']['HEX']})\n\t\t\t\tthis.setState({'lip_type' : data['lip_type']})\n\t\t\t\tthis.setState({'best_colors' : data['best_colors']})\n\n\t\t\t\tvar images = []\n\t\t\t\tvar brand_info = []\n\t\t\t\tdata['recommendation'].forEach((value, index) => {\n\t\t\t\t\tvar item = {\n\t\t\t\t\t\toriginal : value['url'],\n\t\t\t\t\t\tthumbnail : value['url'],\n\t\t\t\t\t}\n\n\t\t\t\t\tvar brand = {\n\t\t\t\t\t\t'brand_name' : value['brand'],\n\t\t\t\t\t\t'product_name' : value['name'],\n\t\t\t\t\t\t'url' : value['url']\n\t\t\t\t\t}\n\n\t\t\t\t\t// console.log(value)\n\n\t\t\t\t\timages.push(item)\n\t\t\t\t\tbrand_info.push(brand)\n\t\t\t\t})\n\n\t\t\t\tthis.setState({brand_info : brand_info})\n\t\t\t\tthis.setState({lipstick_images : images})\n\t\t\t}\n\t\t}).catch(error => {\n\t\t\tconsole.log(error)\n\t\t\talert('Cannot communicate with API')\n\t\t})\n\t}\n\n\ttriggerInputFile = () => this.fileInput.click()\n\n\t/** Callbacks for image gallery **/\n\tthumbnailClicked(event, index) {\n\t\tthis.setState({current_brand_index : index})\n\t}\n\n\tslideChanged(index){\n\t\tthis.setState({current_brand_index : index})\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div id='container'>\n\t\t\t\t<div id=\"image-region\">\n\t\t\t\t\t<img id='image' src={this.state.selfie_file}/>\n\t\t\t\t</div>\n\n\t\t\t\t{/* The Gallery dialog */}\n\t\t\t\t<Modal show={this.state.display_gallery} \n\t\t\t\t\tonHide={this.handleGalleryClose} \n\t\t\t\t\tbackdrop=\"static\" \t\n\t\t\t\t\tkeyboard={true}\n\t\t\t\t\tsize=\"lg\">\n\t\t\t        <Modal.Header closeButton>\n\t\t\t        \t<Modal.Title style={{'font-weight' : 'bolder', 'text-decoration' : 'underline'}}>Brand Recommendation</Modal.Title>\n\t\t\t        </Modal.Header>\n\t\t\t        <Modal.Body>\n\t\t\t          <Container>\n\t\t\t          \t<Row>\n\t\t\t          \t\t<Col>\n\t\t\t          \t\t\t<ImageGallery items={this.state.lipstick_images} thumbnailPosition={'bottom'} \n\t\t\t          \t\t\t\tonThumbnailClick={this.thumbnailClicked}\n\t\t\t          \t\t\t\tonSlide={this.slideChanged}/>\n\t\t\t          \t\t</Col>\n\t\t\t          \t\t<Col>\n\t\t\t          \t\t\t<div id='brand-info'>\n\t\t\t          \t\t\t\t<table style={{'width' : '100%'}} id=\"brand-info-table\">\n\t\t\t          \t\t\t\t\t<tr>\n\t\t\t          \t\t\t\t\t\t<p><span className='header'>Brand</span></p>\n\t\t\t          \t\t\t\t\t\t<p>\n\t\t\t          \t\t\t\t\t\t\t{this.state.brand_info.length > 0 \n\t\t\t          \t\t\t\t\t\t\t\t? <p>{this.state.brand_info[this.state.current_brand_index].brand_name}</p> \n\t\t\t          \t\t\t\t\t\t\t\t: <p></p>}\n\t\t\t          \t\t\t\t\t\t</p>\n\t\t\t          \t\t\t\t\t</tr>\n\t\t\t          \t\t\t\t\t<tr>\n\t\t\t          \t\t\t\t\t\t<p><span className='header'>Product Name</span></p>\n\t\t\t          \t\t\t\t\t\t<p>\n\t\t\t          \t\t\t\t\t\t\t{this.state.brand_info.length > 0 \n\t\t\t          \t\t\t\t\t\t\t\t? <p>{this.state.brand_info[this.state.current_brand_index].product_name}</p> \n\t\t\t          \t\t\t\t\t\t\t\t: <p></p>}\n\t\t\t          \t\t\t\t\t\t</p>\n\t\t\t          \t\t\t\t\t</tr>\n\t\t\t          \t\t\t\t\t<tr>\n\t\t\t          \t\t\t\t\t\t<p><span className='header'>URL</span></p>\n\t\t\t          \t\t\t\t\t\t<p>\n\t\t\t          \t\t\t\t\t\t\t{this.state.brand_info.length > 0 \n\t\t\t          \t\t\t\t\t\t\t\t? <a href={this.state.brand_info[this.state.current_brand_index].url}>Click Here</a> \n\t\t\t          \t\t\t\t\t\t\t\t: <p></p>}\n\t\t\t          \t\t\t\t\t\t</p>\n\t\t\t          \t\t\t\t\t</tr>\n\t\t\t          \t\t\t\t</table>\n\t\t\t          \t\t\t</div>\n\t\t\t          \t\t</Col>\n\t\t\t          \t</Row>\n\t\t\t          </Container>\n\t\t\t        </Modal.Body>\n\n\t\t\t        <Modal.Footer>\n\t\t\t          \t<Button variant=\"secondary\" onClick={this.handleGalleryClose}>\n\t\t\t            Close\n\t\t\t          \t</Button>\n\t\t\t        </Modal.Footer>\n\t\t\t    </Modal>\n\n\t\t\t\t<div id=\"utils\">\t\n\t\t\t\t\t<h2>Upload your selfie</h2>\n\t\t\t\t\t<input type='file' id='selfie-upload' ref={fileInput => this.fileInput = fileInput} onChange={this.fileChange} className='form-control'/>\n\t\t\t\t\t\n\t\t\t\t\t<InputGroup className=\"mb-3\">\n\t\t\t\t\t    <InputGroup.Prepend>\n\t\t\t\t\t      <Button id='upload-button' onClick={this.triggerInputFile} variant=\"primary\">Upload File</Button>\n\t\t\t\t\t    </InputGroup.Prepend>\n\t\t\t\t\t    <FormControl\n\t\t\t\t\t      placeholder={this.state.selfie_file}\n\t\t\t\t\t      aria-label=\"Selfie image\"\n\t\t\t\t\t      aria-describedby=\"basic-addon1\"\n\t\t\t\t\t    />\n\t\t\t\t\t</InputGroup>\n\t\t\t\t  \t<div id='color-info-panel' hidden={!this.state.display_info}>\n\t\t\t\t\t\t<h2>Lip color</h2>\n\t\t\t\t\t\t<div style={{'display' : 'block', 'width': '100%', 'height':'200px'}}>\n\t\t\t\t\t\t\t<div id='lip-color' style={{background:`rgb(${this.state.R}, ${this.state.G}, ${this.state.B})`}}></div>\n\t\t\t\t\t\t\t<p id='color-info-text'>\n\t\t\t\t\t\t\t\t<table style={{'width' : '100%'}}>\n\t\t\t\t\t\t\t\t\t<tr style={{'width' : '100%'}}>\n\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t<span className='header'>Lip Color in rgb :</span>\n\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t<td style={{'float':'right', 'width' : '100%', 'margin-left' : '10px'}}>\n\t\t\t\t\t\t\t\t\t\t\t({this.state.R}, {this.state.G}, {this.state.B})\n\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t<tr style={{'width' : '100%'}}>\n\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t<span className='header'>Lip Color in hex :</span>\n\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t<td tyle={{'float':'right', 'width' : '100%', 'margin-left' : '10px'}}>\n\t\t\t\t\t\t\t\t\t\t\t{this.state.color_hex} \n\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t<span className='header'>Lip Type :</span>\n\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t<td tyle={{'float':'right', 'width' : '100%', 'margin-left' : '10px'}}>\n\t\t\t\t\t\t\t\t\t\t\t{this.state.lip_type} \n\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<h2 style={{'display' : 'block'}}>Recommended Color (MAC)</h2>\n\t\t\t\t\t\t<table style={{'display' : 'block', 'width' : '100%'}} id='recommended-color-table'>\n\t\t\t\t\t\t\t{this.state.best_colors.map((value, index) => {\n\t\t\t\t\t\t\t\tconsole.log('ahihi')\n\t\t\t\t\t\t\t\tconsole.log(value)\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<tr style={{'display' : 'block','width' : '100%'}}>\n\t\t\t\t\t\t\t\t\t\t{/* Color div - color name - color code */}\n\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t<div style={{'width' : '50px', 'height' : '50px', 'background' : value['color_code']}}></div>\n\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t<td>{value['color_code']}</td>\n\t\t\t\t\t\t\t\t\t\t<td>{value['color_name']}</td>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</table>\n\t\t\t\t\t\t<button id='recommend-button' onClick={this.handleGalleryOpen} className='btn btn-info' type='button'>See recommendation from database</button>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{/* Load screen */}\n\t\t\t\t\t<div id='loading-screen' hidden={!this.state.display_load_screen}>\n\t\t\t\t\t\t<img src='/loading.gif'/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default HomePage",{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":1,"column":8,"nodeType":"33","messageId":"34","endLine":1,"endColumn":12},{"ruleId":"31","severity":1,"message":"35","line":2,"column":8,"nodeType":"33","messageId":"34","endLine":2,"endColumn":16},{"ruleId":"36","severity":1,"message":"37","line":136,"column":6,"nodeType":"38","endLine":136,"endColumn":52},{"ruleId":"36","severity":1,"message":"37","line":268,"column":7,"nodeType":"38","endLine":268,"endColumn":32},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'ReactDOM' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]